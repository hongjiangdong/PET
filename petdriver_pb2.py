# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: petdriver.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='petdriver.proto',
  package='driver',
  syntax='proto3',
  serialized_pb=_b('\n\x0fpetdriver.proto\x12\x06\x64river\"/\n\x08\x41\x63qParam\x12\x10\n\x08\x64uration\x18\x01 \x01(\x05\x12\x11\n\tfile_name\x18\x02 \x01(\t\"d\n\x07\x43ommand\x12 \n\x03\x63md\x18\x01 \x01(\x0e\x32\x13.driver.Command.CMD\x12\x0b\n\x03\x64st\x18\x02 \x01(\x05\x12\x0f\n\x07payload\x18\x03 \x01(\x05\"\x19\n\x03\x43MD\x12\x08\n\x04PING\x10\x00\x12\x08\n\x04INIT\x10\x01\"/\n\x0c\x43ommandReply\x12\x0e\n\x06result\x18\x01 \x01(\x08\x12\x0f\n\x07\x65rr_msg\x18\x02 \x01(\t2|\n\tPetDriver\x12\x36\n\x0bSendCommand\x12\x0f.driver.Command\x1a\x14.driver.CommandReply\"\x00\x12\x37\n\x0b\x41\x63quireData\x12\x10.driver.AcqParam\x1a\x14.driver.CommandReply\"\x00\x62\x06proto3')
)



_COMMAND_CMD = _descriptor.EnumDescriptor(
  name='CMD',
  full_name='driver.Command.CMD',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PING', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INIT', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=151,
  serialized_end=176,
)
_sym_db.RegisterEnumDescriptor(_COMMAND_CMD)


_ACQPARAM = _descriptor.Descriptor(
  name='AcqParam',
  full_name='driver.AcqParam',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='duration', full_name='driver.AcqParam.duration', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='file_name', full_name='driver.AcqParam.file_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=27,
  serialized_end=74,
)


_COMMAND = _descriptor.Descriptor(
  name='Command',
  full_name='driver.Command',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cmd', full_name='driver.Command.cmd', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dst', full_name='driver.Command.dst', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='payload', full_name='driver.Command.payload', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _COMMAND_CMD,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=76,
  serialized_end=176,
)


_COMMANDREPLY = _descriptor.Descriptor(
  name='CommandReply',
  full_name='driver.CommandReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='driver.CommandReply.result', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='err_msg', full_name='driver.CommandReply.err_msg', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=178,
  serialized_end=225,
)

_COMMAND.fields_by_name['cmd'].enum_type = _COMMAND_CMD
_COMMAND_CMD.containing_type = _COMMAND
DESCRIPTOR.message_types_by_name['AcqParam'] = _ACQPARAM
DESCRIPTOR.message_types_by_name['Command'] = _COMMAND
DESCRIPTOR.message_types_by_name['CommandReply'] = _COMMANDREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AcqParam = _reflection.GeneratedProtocolMessageType('AcqParam', (_message.Message,), dict(
  DESCRIPTOR = _ACQPARAM,
  __module__ = 'petdriver_pb2'
  # @@protoc_insertion_point(class_scope:driver.AcqParam)
  ))
_sym_db.RegisterMessage(AcqParam)

Command = _reflection.GeneratedProtocolMessageType('Command', (_message.Message,), dict(
  DESCRIPTOR = _COMMAND,
  __module__ = 'petdriver_pb2'
  # @@protoc_insertion_point(class_scope:driver.Command)
  ))
_sym_db.RegisterMessage(Command)

CommandReply = _reflection.GeneratedProtocolMessageType('CommandReply', (_message.Message,), dict(
  DESCRIPTOR = _COMMANDREPLY,
  __module__ = 'petdriver_pb2'
  # @@protoc_insertion_point(class_scope:driver.CommandReply)
  ))
_sym_db.RegisterMessage(CommandReply)



_PETDRIVER = _descriptor.ServiceDescriptor(
  name='PetDriver',
  full_name='driver.PetDriver',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=227,
  serialized_end=351,
  methods=[
  _descriptor.MethodDescriptor(
    name='SendCommand',
    full_name='driver.PetDriver.SendCommand',
    index=0,
    containing_service=None,
    input_type=_COMMAND,
    output_type=_COMMANDREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AcquireData',
    full_name='driver.PetDriver.AcquireData',
    index=1,
    containing_service=None,
    input_type=_ACQPARAM,
    output_type=_COMMANDREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_PETDRIVER)

DESCRIPTOR.services_by_name['PetDriver'] = _PETDRIVER

# @@protoc_insertion_point(module_scope)
